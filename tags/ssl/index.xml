<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ssl on blindgaenger</title>
    <link>http://blindgaenger.net/tags/ssl/</link>
    <description>Recent content in Ssl on blindgaenger</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://blindgaenger.net/tags/ssl/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Generate SSL certificate</title>
      <link>http://blindgaenger.net/articles/2008-07-13-generate-ssl-certificate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blindgaenger.net/articles/2008-07-13-generate-ssl-certificate/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://www.akadia.com/services/ssh_test_certificate.html&#34;&gt;http://www.akadia.com/services/ssh_test_certificate.html&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;generate-a-complex-pass-phrase:d8a21bf4e076ac0970a161f0ef73b331&#34;&gt;Generate a complex pass-phrase.&lt;/h1&gt;

&lt;p&gt;In the following it&amp;rsquo;s shown as XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.&lt;/p&gt;

&lt;h1 id=&#34;generate-a-csr-certificate-signing-request:d8a21bf4e076ac0970a161f0ef73b331&#34;&gt;Generate a CSR (Certificate Signing Request)&lt;/h1&gt;

&lt;p&gt;{% highlight bash %}
$ openssl genrsa -des3 -out wzuup.key 1024
Generating RSA private key, 1024 bit long modulus
&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;.++++++
&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;++++++
e is 65537 (0x10001)
Enter pass phrase for cert.key:
Verifying - Enter pass phrase for wzuup.key:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
{% endhighlight %}&lt;/p&gt;

&lt;h1 id=&#34;generate-a-csr-certificate-signing-request-1:d8a21bf4e076ac0970a161f0ef73b331&#34;&gt;Generate a CSR (Certificate Signing Request)&lt;/h1&gt;

&lt;p&gt;{% highlight bash %}
$ sudo openssl req -new -key wzuup.key -out wzuup.csr
Enter pass phrase for wzuup.key:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,&lt;/p&gt;

&lt;h2 id=&#34;if-you-enter-the-field-will-be-left-blank:d8a21bf4e076ac0970a161f0ef73b331&#34;&gt;If you enter &amp;lsquo;.&amp;rsquo;, the field will be left blank.&lt;/h2&gt;

&lt;p&gt;Country Name (2 letter code) [AU]:DE
State or Province Name (full name) [Some-State]:Baden-WÃ¼rttemberg
Locality Name (eg, city) []:Karlsruhe
Organization Name (eg, company) [Internet Widgits Pty Ltd]:WZUUP.de
Organizational Unit Name (eg, section) []:
Common Name (eg, YOUR name) []:www.wzuup.de
Email Address []:kontakt@wzuup.de&lt;/p&gt;

&lt;p&gt;Please enter the following &amp;lsquo;extra&amp;rsquo; attributes
to be sent with your certificate request
A challenge password []:
An optional company name []:
{% endhighlight %}&lt;/p&gt;

&lt;h1 id=&#34;remove-passphrase-from-key:d8a21bf4e076ac0970a161f0ef73b331&#34;&gt;Remove Passphrase from Key&lt;/h1&gt;

&lt;p&gt;{% highlight bash %}
$ sudo cp wzuup.key wzuup.key.org
$ sudo openssl rsa -in wzuup.key.org -out wzuup.key
Enter pass phrase for wzuup.key.org:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
writing RSA key
{% endhighlight %}&lt;/p&gt;

&lt;h1 id=&#34;self-sign-certificate:d8a21bf4e076ac0970a161f0ef73b331&#34;&gt;Self-sign certificate&lt;/h1&gt;

&lt;p&gt;Create a self-signed certificate, which is valid to for 365 days.
So it will not officially be cerificated by the certification authority.
The request is useless for self-signed certificates.&lt;/p&gt;

&lt;p&gt;{% highlight bash %}
$ sudo openssl x509 -req -days 365 -signkey wzuup.key -in wzuup.csr -out wzuup.crt
Signature ok
subject=/C=DE/ST=Baden-W\xC3\xBCrttemberg/L=Karlsruhe/O=WZUUP.de/CN=www.wzuup.de/emailAddress=kontakt@wzuup.de
Getting Private key
{% endhighlight %}&lt;/p&gt;

&lt;h1 id=&#34;use-the-certificate:d8a21bf4e076ac0970a161f0ef73b331&#34;&gt;Use the certificate&lt;/h1&gt;

&lt;p&gt;Now you have four files:
* &lt;code&gt;wzuup.key.org&lt;/code&gt;: the certificate key with passphrase
* &lt;code&gt;wzuup.key&lt;/code&gt;: the certificate key without passphrase
* &lt;code&gt;wzuup.csr&lt;/code&gt;: the request for the certificate
* &lt;code&gt;wzuup.crt&lt;/code&gt;: the self-signed certificate&lt;/p&gt;

&lt;p&gt;But only upload and use &lt;code&gt;wzuup.key&lt;/code&gt; and &lt;code&gt;wzuup.crt&lt;/code&gt; in your applications.&lt;/p&gt;

&lt;p&gt;Done!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Put Rails behind HTTPS</title>
      <link>http://blindgaenger.net/articles/2008-07-13-put-rails-behind-https/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blindgaenger.net/articles/2008-07-13-put-rails-behind-https/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://benr75.com/2008/04/09/force-ssl-for-a-rails-application-with-an-nginx-proxy&#34;&gt;http://benr75.com/2008/04/09/force-ssl-for-a-rails-application-with-an-nginx-proxy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Set &lt;code&gt;X_FORWARDED_PROTO&lt;/code&gt; in &lt;code&gt;nginx.conf&lt;/code&gt;:
{% highlight bash %}
server {
  &amp;hellip;
  location {
    &amp;hellip;
    proxy_set_header X_FORWARDED_PROTO https;
    &amp;hellip;
  }
&amp;hellip;
}
{% endhighlight %}&lt;/p&gt;

&lt;p&gt;Rails will figure out from these lines in &lt;code&gt;request.rb&lt;/code&gt;:
{% highlight ruby %}
def ssl?
      @env[&amp;lsquo;HTTPS&amp;rsquo;] == &amp;lsquo;on&amp;rsquo; || @env[&amp;lsquo;HTTP_X_FORWARDED_PROTO&amp;rsquo;] == &amp;lsquo;https&amp;rsquo;
end
{% endhighlight %}&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>